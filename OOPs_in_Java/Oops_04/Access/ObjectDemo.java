package com.Kunal.Oops_04.Access;

public class ObjectDemo {

    int num;
    public ObjectDemo(int num){
        this.num = num;
    }

    @Override
    public int hashCode() {
        return super.hashCode();
       // return num; // basically here we changed hash things
    }

    @Override
    public boolean equals(Object obj) {
        return super.equals(obj);
    }

    @Override
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    @Override
    public String toString() {
        return super.toString();
    }

//    @Override
//    protected void finalize() throws Throwable {
//        super.finalize();
//    }

    public static void main(String[] args) {

        // for Hashcode

//        ObjectDemo obj = new ObjectDemo(34);
//
//        ObjectDemo obj2 = new ObjectDemo(34);
////  Hashcode basically means that a unique representation of an object via a number
//        // different answer for the same value because number is uniquely generated for every object
//        System.out.println(obj.hashCode());// it is not address it's just a random integers generated by an algorithm
//        System.out.println(obj2.hashCode());


        // for Equals

        ObjectDemo obj1 = new ObjectDemo(34);
        ObjectDemo obj2 = new ObjectDemo(34);

        if(obj1 == obj2){
            System.out.println("== is compare object that both are pointing to same object or not");
        }

        if(obj1.equals(obj2)){
            System.out.println(".equals() is a method that checks actual content");
        }

        System.out.println(obj1.getClass());
        // get class information is actually stored in Heap.
    }
}
